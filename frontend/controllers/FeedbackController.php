<?php
/**
 * Created by PhpStorm.
 * User: venod
 * Date: 28.01.2019
 * Time: 9:16
 */

namespace frontend\controllers;


use common\helpers\FileHelper;
use common\helpers\Telegram;
use common\models\Html;
use common\models\User;
use modules\config\models\Config;
use modules\feedback\models\Support;
use modules\utils\models\Subscriber;
use modules\utils\models\UtilsShare;
use Yii;
use yii\base\Exception;
use yii\helpers\Json;
use yii\rest\Controller;
use yii\validators\EmailValidator;
use yii\web\Response;
use yii\web\UploadedFile;

class FeedbackController extends Controller
{
    public function beforeAction($action)
    {
        Yii::$app->response->format = Response::FORMAT_JSON;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * Формы подписки
     * @return array
     */
    public function actionSubscribe()
    {
        $status = 'fail';
        $message = 'Ошибка при оформлении подписки';
        $post = Yii::$app->request->post();
        if (!empty($post['email'])) {
            $model = Subscriber::findOne(['email' => $post['email']]);
            if ($model && $model->status === Subscriber::STATUS_ACTIVE) {
                $status = 'success';
                $message = 'Этот email уже в списке рассылки';
            } else {
                if (!$model) {
                    $model = new Subscriber(['email' => $post['email'], 'status' => Subscriber::STATUS_ACTIVE]);
                    if (!Yii::$app->user->isGuest && $post['email'] === User::getUser()->email) {
                        $model->user_id = Yii::$app->user->id;
                    }
                } else {
                    $model->status = Subscriber::STATUS_ACTIVE;
                }
                if ($model->save()) {
                    $status = 'success';
                    $message = 'Подписка успешно оформлена';
                    $mail = Yii::$app->mailer->compose('subscribed', ['model' => $model]);
                    $mail->setFrom([Yii::$app->params['supportEmail'] => Yii::$app->name]);
                    $mail->setTo($model->email);
                    $mail->setSubject('Оформлена подписка на сайте '.Yii::$app->request->getHostInfo());
                    $mail->send();
                    Telegram::send('Оформлена подписка на сайте '.Yii::$app->request->getHostInfo().' на почту '.$model->email);
                }
            }
        }
        return ['status' => $status, 'message' => $message];
    }

    /**
     * Форма консультации
     * @return array|Response
     */
    public function actionConsultation()
    {
        $status = 'fail';
        $post = Yii::$app->request->post();
        if (array_key_exists('approve', $post) && $post['approve']) {
            $contact = Html::encode($post['email']);
            $url = Html::encode($post['url']);
            $request = new Support();
            $request->contact = $contact;
            $request->url = $url;
            $request->save();
            $validator = new EmailValidator();
            if ($validator->validate($contact)) {
                $mail = Yii::$app->mailer->compose('thanks', ['contact' => $contact]);
                $mail->setFrom([Yii::$app->params['supportEmail'] => Yii::$app->name]);
                $mail->setTo($contact);
                $mail->setSubject('Спасибо за обращение');
                $mail->send();
            }
            Telegram::send('Reconcept: Заявка на консультацию. Контакт '.$contact);
            $status = 'success';
        }
        if (Yii::$app->request->isAjax) {
            return ['status' => $status];
        }
        return $this->redirect(Yii::$app->request->getReferrer());
    }

    /**
     * Форма консультации из статьи
     * @return array|Response
     */
    public function actionArticle()
    {
        $status = 'fail';
        $post = Yii::$app->request->post();
        if (array_key_exists('approve', $post) && $post['approve']) {
            $contact = Html::eTake($post['email']);
            $url = Html::eTake($post['url']);
            $feedback = new Support(['url' => $url, 'email' => $contact]);
            if ($feedback->save()) {
                $status = 'success';
            }

            $mail = Yii::$app->mailer->compose('thanks', ['contact' => $contact]);
            $mail->setFrom([Yii::$app->params['supportEmail'] => Yii::$app->name]);
            $mail->setTo($contact);
            $mail->setSubject('Спасибо за обращение');
            $mail->send();
            Telegram::send('Новое обращение из статьи '.$url);
        }
        if (Yii::$app->request->isAjax) {
            return ['status' => $status];
        }
        return $this->redirect(Yii::$app->request->getReferrer());
    }

    /**
     * Форма саппорта с файлами
     * @return array
     * @throws Exception
     */
    public function actionSupport()
    {
        $status = 'fail';
        $post = Yii::$app->request->post();
        if (array_key_exists('approve', $post) && $post['approve']) {
            $url = Html::eTake($post['url']);
            $name = Html::eTake($post['name']);
            $email = Html::eTake($post['email']);
            $phone = Html::eTake($post['phone']);
            $message = Html::eTake($post['message']);

            $feedback = new Support();
            $feedback->url = $url;
            $feedback->name = $name;
            $feedback->email = $email;
            $feedback->phone = $phone;
            $feedback->message = $message;
            $file = UploadedFile::getInstanceByName('file');
            if ($file) {
                $feedback->file = FileHelper::uploadFile($feedback, $file, true);
            }
            $feedback->save();
            Yii::$app->mailer->compose('thanks',
                ['name' => $name, 'email' => $email, 'address' => $phone, 'message' => $message])
                ->setFrom([Yii::$app->params['supportEmail'] => Yii::$app->name])->setTo($email)
                ->setSubject('Спасибо за обращение')->send();
            Telegram::send('Новое обращение через форму саппорта: '.Json::encode(['name' => $name, 'email' => $email, 'address' => $phone, 'message' => $message]));
            $status = 'success';
        }
        return ['status' => $status];
    }

    /**
     * @return array
     */
    public function actionShare()
    {
        $post = Yii::$app->request->post();
        if (empty($post['page']) && empty($post['social'])) {
            return ['status' => 'fail'];
        }
        $count = UtilsShare::addShare(Html::encode($post['page']), Html::encode($post['social']));
        if ($count) {
            return ['status' => 'success', 'count' => $count];
        }
        return ['status' => 'fail'];
    }
}